{"ast":null,"code":"import $RRrwT$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $RRrwT$forwardRef, useRef as $RRrwT$useRef, useState as $RRrwT$useState, useCallback as $RRrwT$useCallback, createElement as $RRrwT$createElement, useEffect as $RRrwT$useEffect, useMemo as $RRrwT$useMemo, Fragment as $RRrwT$Fragment } from \"react\";\nimport { composeEventHandlers as $RRrwT$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs as $RRrwT$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $RRrwT$createContextScope } from \"@radix-ui/react-context\";\nimport { useId as $RRrwT$useId } from \"@radix-ui/react-id\";\nimport { Label as $RRrwT$Label } from \"@radix-ui/react-label\";\nimport { Primitive as $RRrwT$Primitive } from \"@radix-ui/react-primitive\";\nconst [$d94698215c4408a7$var$createFormContext, $d94698215c4408a7$export$299997c7551e97cb] = $RRrwT$createContextScope('Form');\n/* -------------------------------------------------------------------------------------------------\n * Form\n * -----------------------------------------------------------------------------------------------*/\nconst $d94698215c4408a7$var$FORM_NAME = 'Form';\nconst [$d94698215c4408a7$var$ValidationProvider, $d94698215c4408a7$var$useValidationContext] = $d94698215c4408a7$var$createFormContext($d94698215c4408a7$var$FORM_NAME);\nconst [$d94698215c4408a7$var$AriaDescriptionProvider, $d94698215c4408a7$var$useAriaDescriptionContext] = $d94698215c4408a7$var$createFormContext($d94698215c4408a7$var$FORM_NAME);\nconst $d94698215c4408a7$export$a7fed597f4b8afd8 = /*#__PURE__*/$RRrwT$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeForm: __scopeForm,\n    onClearServerErrors = () => {},\n    ...rootProps\n  } = props;\n  const formRef = $RRrwT$useRef(null);\n  const composedFormRef = $RRrwT$useComposedRefs(forwardedRef, formRef); // native validity per field\n  const [validityMap, setValidityMap] = $RRrwT$useState({});\n  const getFieldValidity = $RRrwT$useCallback(fieldName => validityMap[fieldName], [validityMap]);\n  const handleFieldValidityChange = $RRrwT$useCallback((fieldName, validity) => setValidityMap(prevValidityMap => {\n    var _prevValidityMap$fiel;\n    return {\n      ...prevValidityMap,\n      [fieldName]: {\n        ...((_prevValidityMap$fiel = prevValidityMap[fieldName]) !== null && _prevValidityMap$fiel !== void 0 ? _prevValidityMap$fiel : {}),\n        ...validity\n      }\n    };\n  }), []);\n  const handleFieldValiditionClear = $RRrwT$useCallback(fieldName => {\n    setValidityMap(prevValidityMap => ({\n      ...prevValidityMap,\n      [fieldName]: undefined\n    }));\n    setCustomErrorsMap(prevCustomErrorsMap => ({\n      ...prevCustomErrorsMap,\n      [fieldName]: {}\n    }));\n  }, []); // custom matcher entries per field\n  const [customMatcherEntriesMap, setCustomMatcherEntriesMap] = $RRrwT$useState({});\n  const getFieldCustomMatcherEntries = $RRrwT$useCallback(fieldName => {\n    var _customMatcherEntries;\n    return (_customMatcherEntries = customMatcherEntriesMap[fieldName]) !== null && _customMatcherEntries !== void 0 ? _customMatcherEntries : [];\n  }, [customMatcherEntriesMap]);\n  const handleFieldCustomMatcherAdd = $RRrwT$useCallback((fieldName, matcherEntry) => {\n    setCustomMatcherEntriesMap(prevCustomMatcherEntriesMap => {\n      var _prevCustomMatcherEnt;\n      return {\n        ...prevCustomMatcherEntriesMap,\n        [fieldName]: [...((_prevCustomMatcherEnt = prevCustomMatcherEntriesMap[fieldName]) !== null && _prevCustomMatcherEnt !== void 0 ? _prevCustomMatcherEnt : []), matcherEntry]\n      };\n    });\n  }, []);\n  const handleFieldCustomMatcherRemove = $RRrwT$useCallback((fieldName, matcherEntryId) => {\n    setCustomMatcherEntriesMap(prevCustomMatcherEntriesMap => {\n      var _prevCustomMatcherEnt2;\n      return {\n        ...prevCustomMatcherEntriesMap,\n        [fieldName]: ((_prevCustomMatcherEnt2 = prevCustomMatcherEntriesMap[fieldName]) !== null && _prevCustomMatcherEnt2 !== void 0 ? _prevCustomMatcherEnt2 : []).filter(matcherEntry => matcherEntry.id !== matcherEntryId)\n      };\n    });\n  }, []); // custom errors per field\n  const [customErrorsMap, setCustomErrorsMap] = $RRrwT$useState({});\n  const getFieldCustomErrors = $RRrwT$useCallback(fieldName => {\n    var _customErrorsMap$fiel;\n    return (_customErrorsMap$fiel = customErrorsMap[fieldName]) !== null && _customErrorsMap$fiel !== void 0 ? _customErrorsMap$fiel : {};\n  }, [customErrorsMap]);\n  const handleFieldCustomErrorsChange = $RRrwT$useCallback((fieldName, customErrors) => {\n    setCustomErrorsMap(prevCustomErrorsMap => {\n      var _prevCustomErrorsMap$;\n      return {\n        ...prevCustomErrorsMap,\n        [fieldName]: {\n          ...((_prevCustomErrorsMap$ = prevCustomErrorsMap[fieldName]) !== null && _prevCustomErrorsMap$ !== void 0 ? _prevCustomErrorsMap$ : {}),\n          ...customErrors\n        }\n      };\n    });\n  }, []); // messageIds per field\n  const [messageIdsMap, setMessageIdsMap] = $RRrwT$useState({});\n  const handleFieldMessageIdAdd = $RRrwT$useCallback((fieldName, id) => {\n    setMessageIdsMap(prevMessageIdsMap => {\n      const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]).add(id);\n      return {\n        ...prevMessageIdsMap,\n        [fieldName]: fieldDescriptionIds\n      };\n    });\n  }, []);\n  const handleFieldMessageIdRemove = $RRrwT$useCallback((fieldName, id) => {\n    setMessageIdsMap(prevMessageIdsMap => {\n      const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]);\n      fieldDescriptionIds.delete(id);\n      return {\n        ...prevMessageIdsMap,\n        [fieldName]: fieldDescriptionIds\n      };\n    });\n  }, []);\n  const getFieldDescription = $RRrwT$useCallback(fieldName => {\n    var _messageIdsMap$fieldN;\n    return Array.from((_messageIdsMap$fieldN = messageIdsMap[fieldName]) !== null && _messageIdsMap$fieldN !== void 0 ? _messageIdsMap$fieldN : []).join(' ') || undefined;\n  }, [messageIdsMap]);\n  return /*#__PURE__*/$RRrwT$createElement($d94698215c4408a7$var$ValidationProvider, {\n    scope: __scopeForm,\n    getFieldValidity: getFieldValidity,\n    onFieldValidityChange: handleFieldValidityChange,\n    getFieldCustomMatcherEntries: getFieldCustomMatcherEntries,\n    onFieldCustomMatcherEntryAdd: handleFieldCustomMatcherAdd,\n    onFieldCustomMatcherEntryRemove: handleFieldCustomMatcherRemove,\n    getFieldCustomErrors: getFieldCustomErrors,\n    onFieldCustomErrorsChange: handleFieldCustomErrorsChange,\n    onFieldValiditionClear: handleFieldValiditionClear\n  }, /*#__PURE__*/$RRrwT$createElement($d94698215c4408a7$var$AriaDescriptionProvider, {\n    scope: __scopeForm,\n    onFieldMessageIdAdd: handleFieldMessageIdAdd,\n    onFieldMessageIdRemove: handleFieldMessageIdRemove,\n    getFieldDescription: getFieldDescription\n  }, /*#__PURE__*/$RRrwT$createElement($RRrwT$Primitive.form, $RRrwT$babelruntimehelpersesmextends({}, rootProps, {\n    ref: composedFormRef // focus first invalid control when the form is submitted\n    ,\n\n    onInvalid: $RRrwT$composeEventHandlers(props.onInvalid, event => {\n      const firstInvalidControl = $d94698215c4408a7$var$getFirstInvalidControl(event.currentTarget);\n      if (firstInvalidControl === event.target) firstInvalidControl.focus(); // prevent default browser UI for form validation\n      event.preventDefault();\n    }) // clear server errors when the form is re-submitted\n    ,\n\n    onSubmit: $RRrwT$composeEventHandlers(props.onSubmit, onClearServerErrors, {\n      checkForDefaultPrevented: false\n    }) // clear server errors when the form is reset\n    ,\n\n    onReset: $RRrwT$composeEventHandlers(props.onReset, onClearServerErrors)\n  }))));\n});\n/*#__PURE__*/\nObject.assign($d94698215c4408a7$export$a7fed597f4b8afd8, {\n  displayName: $d94698215c4408a7$var$FORM_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * FormField\n * -----------------------------------------------------------------------------------------------*/\nconst $d94698215c4408a7$var$FIELD_NAME = 'FormField';\nconst [$d94698215c4408a7$var$FormFieldProvider, $d94698215c4408a7$var$useFormFieldContext] = $d94698215c4408a7$var$createFormContext($d94698215c4408a7$var$FIELD_NAME);\nconst $d94698215c4408a7$export$56e87bf42978147a = /*#__PURE__*/$RRrwT$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeForm: __scopeForm,\n    name: name,\n    serverInvalid = false,\n    ...fieldProps\n  } = props;\n  const validationContext = $d94698215c4408a7$var$useValidationContext($d94698215c4408a7$var$FIELD_NAME, __scopeForm);\n  const validity = validationContext.getFieldValidity(name);\n  const id = $RRrwT$useId();\n  return /*#__PURE__*/$RRrwT$createElement($d94698215c4408a7$var$FormFieldProvider, {\n    scope: __scopeForm,\n    id: id,\n    name: name,\n    serverInvalid: serverInvalid\n  }, /*#__PURE__*/$RRrwT$createElement($RRrwT$Primitive.div, $RRrwT$babelruntimehelpersesmextends({\n    \"data-valid\": $d94698215c4408a7$var$getValidAttribute(validity, serverInvalid),\n    \"data-invalid\": $d94698215c4408a7$var$getInvalidAttribute(validity, serverInvalid)\n  }, fieldProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\nObject.assign($d94698215c4408a7$export$56e87bf42978147a, {\n  displayName: $d94698215c4408a7$var$FIELD_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * FormLabel\n * -----------------------------------------------------------------------------------------------*/\nconst $d94698215c4408a7$var$LABEL_NAME = 'FormLabel';\nconst $d94698215c4408a7$export$842aba50ed0ce9d7 = /*#__PURE__*/$RRrwT$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeForm: __scopeForm,\n    ...labelProps\n  } = props;\n  const validationContext = $d94698215c4408a7$var$useValidationContext($d94698215c4408a7$var$LABEL_NAME, __scopeForm);\n  const fieldContext = $d94698215c4408a7$var$useFormFieldContext($d94698215c4408a7$var$LABEL_NAME, __scopeForm);\n  const htmlFor = labelProps.htmlFor || fieldContext.id;\n  const validity = validationContext.getFieldValidity(fieldContext.name);\n  return /*#__PURE__*/$RRrwT$createElement($RRrwT$Label, $RRrwT$babelruntimehelpersesmextends({\n    \"data-valid\": $d94698215c4408a7$var$getValidAttribute(validity, fieldContext.serverInvalid),\n    \"data-invalid\": $d94698215c4408a7$var$getInvalidAttribute(validity, fieldContext.serverInvalid)\n  }, labelProps, {\n    ref: forwardedRef,\n    htmlFor: htmlFor\n  }));\n});\n/*#__PURE__*/\nObject.assign($d94698215c4408a7$export$842aba50ed0ce9d7, {\n  displayName: $d94698215c4408a7$var$LABEL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * FormControl\n * -----------------------------------------------------------------------------------------------*/\nconst $d94698215c4408a7$var$CONTROL_NAME = 'FormControl';\nconst $d94698215c4408a7$export$fe5d99d8691b3f62 = /*#__PURE__*/$RRrwT$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeForm: __scopeForm,\n    ...controlProps\n  } = props;\n  const validationContext = $d94698215c4408a7$var$useValidationContext($d94698215c4408a7$var$CONTROL_NAME, __scopeForm);\n  const fieldContext = $d94698215c4408a7$var$useFormFieldContext($d94698215c4408a7$var$CONTROL_NAME, __scopeForm);\n  const ariaDescriptionContext = $d94698215c4408a7$var$useAriaDescriptionContext($d94698215c4408a7$var$CONTROL_NAME, __scopeForm);\n  const ref = $RRrwT$useRef(null);\n  const composedRef = $RRrwT$useComposedRefs(forwardedRef, ref);\n  const name = controlProps.name || fieldContext.name;\n  const id1 = controlProps.id || fieldContext.id;\n  const customMatcherEntries = validationContext.getFieldCustomMatcherEntries(name);\n  const {\n    onFieldValidityChange: onFieldValidityChange,\n    onFieldCustomErrorsChange: onFieldCustomErrorsChange,\n    onFieldValiditionClear: onFieldValiditionClear\n  } = validationContext;\n  const updateControlValidity = $RRrwT$useCallback(async control => {\n    //------------------------------------------------------------------------------------------\n    // 1. first, if we have built-in errors we stop here\n    if ($d94698215c4408a7$var$hasBuiltInError(control.validity)) {\n      const controlValidity = $d94698215c4408a7$var$validityStateToObject(control.validity);\n      onFieldValidityChange(name, controlValidity);\n      return;\n    } //------------------------------------------------------------------------------------------\n    // 2. then gather the form data to give to custom matchers for cross-comparisons\n    const formData = control.form ? new FormData(control.form) : new FormData();\n    const matcherArgs = [control.value, formData]; //------------------------------------------------------------------------------------------\n    // 3. split sync and async custom matcher entries\n    const syncCustomMatcherEntries = [];\n    const ayncCustomMatcherEntries = [];\n    customMatcherEntries.forEach(customMatcherEntry => {\n      if ($d94698215c4408a7$var$isAsyncCustomMatcherEntry(customMatcherEntry, matcherArgs)) ayncCustomMatcherEntries.push(customMatcherEntry);else if ($d94698215c4408a7$var$isSyncCustomMatcherEntry(customMatcherEntry)) syncCustomMatcherEntries.push(customMatcherEntry);\n    }); //------------------------------------------------------------------------------------------\n    // 4. run sync custom matchers and update control validity / internal validity + errors\n    const syncCustomErrors = syncCustomMatcherEntries.map(({\n      id: id,\n      match: match\n    }) => {\n      return [id, match(...matcherArgs)];\n    });\n    const syncCustomErrorsById = Object.fromEntries(syncCustomErrors);\n    const hasSyncCustomErrors = Object.values(syncCustomErrorsById).some(Boolean);\n    const hasCustomError = hasSyncCustomErrors;\n    control.setCustomValidity(hasCustomError ? $d94698215c4408a7$var$DEFAULT_INVALID_MESSAGE : '');\n    const controlValidity = $d94698215c4408a7$var$validityStateToObject(control.validity);\n    onFieldValidityChange(name, controlValidity);\n    onFieldCustomErrorsChange(name, syncCustomErrorsById); //------------------------------------------------------------------------------------------\n    // 5. run async custom matchers and update control validity / internal validity + errors\n    if (!hasSyncCustomErrors && ayncCustomMatcherEntries.length > 0) {\n      const promisedCustomErrors = ayncCustomMatcherEntries.map(({\n        id: id,\n        match: match\n      }) => match(...matcherArgs).then(matches => [id, matches]));\n      const asyncCustomErrors = await Promise.all(promisedCustomErrors);\n      const asyncCustomErrorsById = Object.fromEntries(asyncCustomErrors);\n      const hasAsyncCustomErrors = Object.values(asyncCustomErrorsById).some(Boolean);\n      const hasCustomError = hasAsyncCustomErrors;\n      control.setCustomValidity(hasCustomError ? $d94698215c4408a7$var$DEFAULT_INVALID_MESSAGE : '');\n      const controlValidity = $d94698215c4408a7$var$validityStateToObject(control.validity);\n      onFieldValidityChange(name, controlValidity);\n      onFieldCustomErrorsChange(name, asyncCustomErrorsById);\n    }\n  }, [customMatcherEntries, name, onFieldCustomErrorsChange, onFieldValidityChange]);\n  $RRrwT$useEffect(() => {\n    const control = ref.current;\n    if (control) {\n      // We only want validate on change (native `change` event, not React's `onChange`). This is primarily\n      // a UX decision, we don't want to validate on every keystroke and React's `onChange` is the `input` event.\n      const handleChange = () => updateControlValidity(control);\n      control.addEventListener('change', handleChange);\n      return () => control.removeEventListener('change', handleChange);\n    }\n  }, [updateControlValidity]);\n  const resetControlValidity = $RRrwT$useCallback(() => {\n    const control = ref.current;\n    if (control) {\n      control.setCustomValidity('');\n      onFieldValiditionClear(name);\n    }\n  }, [name, onFieldValiditionClear]); // reset validity and errors when the form is reset\n  $RRrwT$useEffect(() => {\n    var _ref$current;\n    const form = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.form;\n    if (form) {\n      form.addEventListener('reset', resetControlValidity);\n      return () => form.removeEventListener('reset', resetControlValidity);\n    }\n  }, [resetControlValidity]); // focus first invalid control when fields are set as invalid by server\n  $RRrwT$useEffect(() => {\n    const control = ref.current;\n    const form = control === null || control === void 0 ? void 0 : control.closest('form');\n    if (form && fieldContext.serverInvalid) {\n      const firstInvalidControl = $d94698215c4408a7$var$getFirstInvalidControl(form);\n      if (firstInvalidControl === control) firstInvalidControl.focus();\n    }\n  }, [fieldContext.serverInvalid]);\n  const validity = validationContext.getFieldValidity(name);\n  return /*#__PURE__*/$RRrwT$createElement($RRrwT$Primitive.input, $RRrwT$babelruntimehelpersesmextends({\n    \"data-valid\": $d94698215c4408a7$var$getValidAttribute(validity, fieldContext.serverInvalid),\n    \"data-invalid\": $d94698215c4408a7$var$getInvalidAttribute(validity, fieldContext.serverInvalid),\n    \"aria-invalid\": fieldContext.serverInvalid ? true : undefined,\n    \"aria-describedby\": ariaDescriptionContext.getFieldDescription(name) // disable default browser behaviour of showing built-in error message on hover\n    ,\n\n    title: \"\"\n  }, controlProps, {\n    ref: composedRef,\n    id: id1,\n    name: name,\n    onInvalid: $RRrwT$composeEventHandlers(props.onInvalid, event => {\n      const control = event.currentTarget;\n      updateControlValidity(control);\n    }),\n    onChange: $RRrwT$composeEventHandlers(props.onChange, event => {\n      // reset validity when user changes value\n      resetControlValidity();\n    })\n  }));\n});\n/*#__PURE__*/\nObject.assign($d94698215c4408a7$export$fe5d99d8691b3f62, {\n  displayName: $d94698215c4408a7$var$CONTROL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * FormMessage\n * -----------------------------------------------------------------------------------------------*/\nconst $d94698215c4408a7$var$validityMatchers = ['badInput', 'patternMismatch', 'rangeOverflow', 'rangeUnderflow', 'stepMismatch', 'tooLong', 'tooShort', 'typeMismatch', 'valid', 'valueMissing'];\nconst $d94698215c4408a7$var$DEFAULT_INVALID_MESSAGE = 'This value is not valid';\nconst $d94698215c4408a7$var$DEFAULT_BUILT_IN_MESSAGES = {\n  badInput: $d94698215c4408a7$var$DEFAULT_INVALID_MESSAGE,\n  patternMismatch: 'This value does not match the required pattern',\n  rangeOverflow: 'This value is too large',\n  rangeUnderflow: 'This value is too small',\n  stepMismatch: 'This value does not match the required step',\n  tooLong: 'This value is too long',\n  tooShort: 'This value is too short',\n  typeMismatch: 'This value does not match the required type',\n  valid: undefined,\n  valueMissing: 'This value is missing'\n};\nconst $d94698215c4408a7$var$MESSAGE_NAME = 'FormMessage';\nconst $d94698215c4408a7$export$2e8ae7a1a126169a = /*#__PURE__*/$RRrwT$forwardRef((props, forwardedRef) => {\n  const {\n    match: match,\n    name: nameProp,\n    ...messageProps\n  } = props;\n  const fieldContext = $d94698215c4408a7$var$useFormFieldContext($d94698215c4408a7$var$MESSAGE_NAME, props.__scopeForm);\n  const name = nameProp !== null && nameProp !== void 0 ? nameProp : fieldContext.name;\n  if (match === undefined) return /*#__PURE__*/$RRrwT$createElement($d94698215c4408a7$var$FormMessageImpl, $RRrwT$babelruntimehelpersesmextends({}, messageProps, {\n    ref: forwardedRef,\n    name: name\n  }), props.children || $d94698215c4408a7$var$DEFAULT_INVALID_MESSAGE);else if (typeof match === 'function') return /*#__PURE__*/$RRrwT$createElement($d94698215c4408a7$var$FormCustomMessage, $RRrwT$babelruntimehelpersesmextends({\n    match: match\n  }, messageProps, {\n    ref: forwardedRef,\n    name: name\n  }));else return /*#__PURE__*/$RRrwT$createElement($d94698215c4408a7$var$FormBuiltInMessage, $RRrwT$babelruntimehelpersesmextends({\n    match: match\n  }, messageProps, {\n    ref: forwardedRef,\n    name: name\n  }));\n});\n/*#__PURE__*/\nObject.assign($d94698215c4408a7$export$2e8ae7a1a126169a, {\n  displayName: $d94698215c4408a7$var$MESSAGE_NAME\n});\nconst $d94698215c4408a7$var$FormBuiltInMessage = /*#__PURE__*/$RRrwT$forwardRef((props, forwardedRef) => {\n  const {\n    match: match,\n    forceMatch = false,\n    name: name,\n    children: children,\n    ...messageProps\n  } = props;\n  const validationContext = $d94698215c4408a7$var$useValidationContext($d94698215c4408a7$var$MESSAGE_NAME, messageProps.__scopeForm);\n  const validity = validationContext.getFieldValidity(name);\n  const matches = forceMatch || (validity === null || validity === void 0 ? void 0 : validity[match]);\n  if (matches) return /*#__PURE__*/$RRrwT$createElement($d94698215c4408a7$var$FormMessageImpl, $RRrwT$babelruntimehelpersesmextends({\n    ref: forwardedRef\n  }, messageProps, {\n    name: name\n  }), children !== null && children !== void 0 ? children : $d94698215c4408a7$var$DEFAULT_BUILT_IN_MESSAGES[match]);\n  return null;\n});\nconst $d94698215c4408a7$var$FormCustomMessage = /*#__PURE__*/$RRrwT$forwardRef((props, forwardedRef) => {\n  const {\n    match: match,\n    forceMatch = false,\n    name: name,\n    id: idProp,\n    children: children,\n    ...messageProps\n  } = props;\n  const validationContext = $d94698215c4408a7$var$useValidationContext($d94698215c4408a7$var$MESSAGE_NAME, messageProps.__scopeForm);\n  const ref = $RRrwT$useRef(null);\n  const composedRef = $RRrwT$useComposedRefs(forwardedRef, ref);\n  const _id = $RRrwT$useId();\n  const id = idProp !== null && idProp !== void 0 ? idProp : _id;\n  const customMatcherEntry = $RRrwT$useMemo(() => ({\n    id: id,\n    match: match\n  }), [id, match]);\n  const {\n    onFieldCustomMatcherEntryAdd: onFieldCustomMatcherEntryAdd,\n    onFieldCustomMatcherEntryRemove: onFieldCustomMatcherEntryRemove\n  } = validationContext;\n  $RRrwT$useEffect(() => {\n    onFieldCustomMatcherEntryAdd(name, customMatcherEntry);\n    return () => onFieldCustomMatcherEntryRemove(name, customMatcherEntry.id);\n  }, [customMatcherEntry, name, onFieldCustomMatcherEntryAdd, onFieldCustomMatcherEntryRemove]);\n  const validity = validationContext.getFieldValidity(name);\n  const customErrors = validationContext.getFieldCustomErrors(name);\n  const hasMatchingCustomError = customErrors[id];\n  const matches = forceMatch || validity && !$d94698215c4408a7$var$hasBuiltInError(validity) && hasMatchingCustomError;\n  if (matches) return /*#__PURE__*/$RRrwT$createElement($d94698215c4408a7$var$FormMessageImpl, $RRrwT$babelruntimehelpersesmextends({\n    id: id,\n    ref: composedRef\n  }, messageProps, {\n    name: name\n  }), children !== null && children !== void 0 ? children : $d94698215c4408a7$var$DEFAULT_INVALID_MESSAGE);\n  return null;\n});\nconst $d94698215c4408a7$var$FormMessageImpl = /*#__PURE__*/$RRrwT$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeForm: __scopeForm,\n    id: idProp,\n    name: name,\n    ...messageProps\n  } = props;\n  const ariaDescriptionContext = $d94698215c4408a7$var$useAriaDescriptionContext($d94698215c4408a7$var$MESSAGE_NAME, __scopeForm);\n  const _id = $RRrwT$useId();\n  const id = idProp !== null && idProp !== void 0 ? idProp : _id;\n  const {\n    onFieldMessageIdAdd: onFieldMessageIdAdd,\n    onFieldMessageIdRemove: onFieldMessageIdRemove\n  } = ariaDescriptionContext;\n  $RRrwT$useEffect(() => {\n    onFieldMessageIdAdd(name, id);\n    return () => onFieldMessageIdRemove(name, id);\n  }, [name, id, onFieldMessageIdAdd, onFieldMessageIdRemove]);\n  return /*#__PURE__*/$RRrwT$createElement($RRrwT$Primitive.span, $RRrwT$babelruntimehelpersesmextends({\n    id: id\n  }, messageProps, {\n    ref: forwardedRef\n  }));\n});\n/* -------------------------------------------------------------------------------------------------\n * FormValidityState\n * -----------------------------------------------------------------------------------------------*/\nconst $d94698215c4408a7$var$VALIDITY_STATE_NAME = 'FormValidityState';\nconst $d94698215c4408a7$export$7a93102810e06862 = props => {\n  const {\n    __scopeForm: __scopeForm,\n    name: nameProp,\n    children: children\n  } = props;\n  const validationContext = $d94698215c4408a7$var$useValidationContext($d94698215c4408a7$var$VALIDITY_STATE_NAME, __scopeForm);\n  const fieldContext = $d94698215c4408a7$var$useFormFieldContext($d94698215c4408a7$var$VALIDITY_STATE_NAME, __scopeForm);\n  const name = nameProp !== null && nameProp !== void 0 ? nameProp : fieldContext.name;\n  const validity = validationContext.getFieldValidity(name);\n  return /*#__PURE__*/$RRrwT$createElement($RRrwT$Fragment, null, children(validity));\n};\n/*#__PURE__*/\nObject.assign($d94698215c4408a7$export$7a93102810e06862, {\n  displayName: $d94698215c4408a7$var$VALIDITY_STATE_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * FormSubmit\n * -----------------------------------------------------------------------------------------------*/\nconst $d94698215c4408a7$var$SUBMIT_NAME = 'FormSubmit';\nconst $d94698215c4408a7$export$d0861e5bd09bd9e4 = /*#__PURE__*/$RRrwT$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeForm: __scopeForm,\n    ...submitProps\n  } = props;\n  return /*#__PURE__*/$RRrwT$createElement($RRrwT$Primitive.button, $RRrwT$babelruntimehelpersesmextends({\n    type: \"submit\"\n  }, submitProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\nObject.assign($d94698215c4408a7$export$d0861e5bd09bd9e4, {\n  displayName: $d94698215c4408a7$var$SUBMIT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nfunction $d94698215c4408a7$var$validityStateToObject(validity) {\n  const object = {};\n  for (const key in validity) object[key] = validity[key];\n  return object;\n}\nfunction $d94698215c4408a7$var$isHTMLElement(element) {\n  return element instanceof HTMLElement;\n}\nfunction $d94698215c4408a7$var$isFormControl(element) {\n  return 'validity' in element;\n}\nfunction $d94698215c4408a7$var$isInvalid(control) {\n  return $d94698215c4408a7$var$isFormControl(control) && (control.validity.valid === false || control.getAttribute('aria-invalid') === 'true');\n}\nfunction $d94698215c4408a7$var$getFirstInvalidControl(form) {\n  const elements = form.elements;\n  const [firstInvalidControl] = Array.from(elements).filter($d94698215c4408a7$var$isHTMLElement).filter($d94698215c4408a7$var$isInvalid);\n  return firstInvalidControl;\n}\nfunction $d94698215c4408a7$var$isAsyncCustomMatcherEntry(entry, args) {\n  return entry.match.constructor.name === 'AsyncFunction' || $d94698215c4408a7$var$returnsPromise(entry.match, args);\n}\nfunction $d94698215c4408a7$var$isSyncCustomMatcherEntry(entry) {\n  return entry.match.constructor.name === 'Function';\n}\nfunction $d94698215c4408a7$var$returnsPromise(func, args) {\n  return func(...args) instanceof Promise;\n}\nfunction $d94698215c4408a7$var$hasBuiltInError(validity) {\n  let error = false;\n  for (const validityKey in validity) {\n    const key = validityKey;\n    if (key !== 'valid' && key !== 'customError' && validity[key]) {\n      error = true;\n      break;\n    }\n  }\n  return error;\n}\nfunction $d94698215c4408a7$var$getValidAttribute(validity, serverInvalid) {\n  if ((validity === null || validity === void 0 ? void 0 : validity.valid) === true && !serverInvalid) return true;\n  return undefined;\n}\nfunction $d94698215c4408a7$var$getInvalidAttribute(validity, serverInvalid) {\n  if ((validity === null || validity === void 0 ? void 0 : validity.valid) === false || serverInvalid) return true;\n  return undefined;\n}\n/* -----------------------------------------------------------------------------------------------*/\nconst $d94698215c4408a7$export$be92b6f5f03c0fe9 = $d94698215c4408a7$export$a7fed597f4b8afd8;\nconst $d94698215c4408a7$export$a455218a85c89869 = $d94698215c4408a7$export$56e87bf42978147a;\nconst $d94698215c4408a7$export$b04be29aa201d4f5 = $d94698215c4408a7$export$842aba50ed0ce9d7;\nconst $d94698215c4408a7$export$7a7fa4424cb20976 = $d94698215c4408a7$export$fe5d99d8691b3f62;\nconst $d94698215c4408a7$export$f69c19e57285b83a = $d94698215c4408a7$export$2e8ae7a1a126169a;\nconst $d94698215c4408a7$export$5efdf844224572d9 = $d94698215c4408a7$export$7a93102810e06862;\nconst $d94698215c4408a7$export$2c4cf1f7b42ef78c = $d94698215c4408a7$export$d0861e5bd09bd9e4;\nexport { $d94698215c4408a7$export$299997c7551e97cb as createFormScope, $d94698215c4408a7$export$a7fed597f4b8afd8 as Form, $d94698215c4408a7$export$56e87bf42978147a as FormField, $d94698215c4408a7$export$842aba50ed0ce9d7 as FormLabel, $d94698215c4408a7$export$fe5d99d8691b3f62 as FormControl, $d94698215c4408a7$export$2e8ae7a1a126169a as FormMessage, $d94698215c4408a7$export$7a93102810e06862 as FormValidityState, $d94698215c4408a7$export$d0861e5bd09bd9e4 as FormSubmit, $d94698215c4408a7$export$be92b6f5f03c0fe9 as Root, $d94698215c4408a7$export$a455218a85c89869 as Field, $d94698215c4408a7$export$b04be29aa201d4f5 as Label, $d94698215c4408a7$export$7a7fa4424cb20976 as Control, $d94698215c4408a7$export$f69c19e57285b83a as Message, $d94698215c4408a7$export$5efdf844224572d9 as ValidityState, $d94698215c4408a7$export$2c4cf1f7b42ef78c as Submit };","map":{"version":3,"names":["$d94698215c4408a7$var$createFormContext","$d94698215c4408a7$export$299997c7551e97cb","$RRrwT$createContextScope","$d94698215c4408a7$var$FORM_NAME","$d94698215c4408a7$var$ValidationProvider","$d94698215c4408a7$var$useValidationContext","$d94698215c4408a7$var$AriaDescriptionProvider","$d94698215c4408a7$var$useAriaDescriptionContext","$d94698215c4408a7$export$a7fed597f4b8afd8","$RRrwT$forwardRef","props","forwardedRef","__scopeForm","onClearServerErrors","rootProps","formRef","$RRrwT$useRef","composedFormRef","$RRrwT$useComposedRefs","validityMap","setValidityMap","$RRrwT$useState","getFieldValidity","$RRrwT$useCallback","fieldName","handleFieldValidityChange","validity","prevValidityMap","_prevValidityMap$fiel","handleFieldValiditionClear","undefined","setCustomErrorsMap","prevCustomErrorsMap","customMatcherEntriesMap","setCustomMatcherEntriesMap","getFieldCustomMatcherEntries","_customMatcherEntries","handleFieldCustomMatcherAdd","matcherEntry","prevCustomMatcherEntriesMap","_prevCustomMatcherEnt","handleFieldCustomMatcherRemove","matcherEntryId","_prevCustomMatcherEnt2","filter","id","customErrorsMap","getFieldCustomErrors","_customErrorsMap$fiel","handleFieldCustomErrorsChange","customErrors","_prevCustomErrorsMap$","messageIdsMap","setMessageIdsMap","handleFieldMessageIdAdd","prevMessageIdsMap","fieldDescriptionIds","Set","add","handleFieldMessageIdRemove","delete","getFieldDescription","_messageIdsMap$fieldN","Array","from","join","$RRrwT$createElement","scope","onFieldValidityChange","onFieldCustomMatcherEntryAdd","onFieldCustomMatcherEntryRemove","onFieldCustomErrorsChange","onFieldValiditionClear","onFieldMessageIdAdd","onFieldMessageIdRemove","$RRrwT$Primitive","form","$RRrwT$babelruntimehelpersesmextends","ref","onInvalid","$RRrwT$composeEventHandlers","event","firstInvalidControl","$d94698215c4408a7$var$getFirstInvalidControl","currentTarget","target","focus","preventDefault","onSubmit","checkForDefaultPrevented","onReset","Object","assign","displayName","$d94698215c4408a7$var$FIELD_NAME","$d94698215c4408a7$var$FormFieldProvider","$d94698215c4408a7$var$useFormFieldContext","$d94698215c4408a7$export$56e87bf42978147a","name","serverInvalid","fieldProps","validationContext","$RRrwT$useId","div","$d94698215c4408a7$var$getValidAttribute","$d94698215c4408a7$var$getInvalidAttribute","$d94698215c4408a7$var$LABEL_NAME","$d94698215c4408a7$export$842aba50ed0ce9d7","labelProps","fieldContext","htmlFor","$RRrwT$Label","$d94698215c4408a7$var$CONTROL_NAME","$d94698215c4408a7$export$fe5d99d8691b3f62","controlProps","ariaDescriptionContext","composedRef","id1","customMatcherEntries","updateControlValidity","control","$d94698215c4408a7$var$hasBuiltInError","controlValidity","$d94698215c4408a7$var$validityStateToObject","formData","FormData","matcherArgs","value","syncCustomMatcherEntries","ayncCustomMatcherEntries","forEach","customMatcherEntry","$d94698215c4408a7$var$isAsyncCustomMatcherEntry","push","$d94698215c4408a7$var$isSyncCustomMatcherEntry","syncCustomErrors","map","match","syncCustomErrorsById","fromEntries","hasSyncCustomErrors","values","some","Boolean","hasCustomError","setCustomValidity","$d94698215c4408a7$var$DEFAULT_INVALID_MESSAGE","length","promisedCustomErrors","then","matches","asyncCustomErrors","Promise","all","asyncCustomErrorsById","hasAsyncCustomErrors","$RRrwT$useEffect","current","handleChange","addEventListener","removeEventListener","resetControlValidity","_ref$current","closest","input","title","onChange","$d94698215c4408a7$var$validityMatchers","$d94698215c4408a7$var$DEFAULT_BUILT_IN_MESSAGES","badInput","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valid","valueMissing","$d94698215c4408a7$var$MESSAGE_NAME","$d94698215c4408a7$export$2e8ae7a1a126169a","nameProp","messageProps","$d94698215c4408a7$var$FormMessageImpl","children","$d94698215c4408a7$var$FormCustomMessage","$d94698215c4408a7$var$FormBuiltInMessage","forceMatch","idProp","_id","$RRrwT$useMemo","hasMatchingCustomError","span","$d94698215c4408a7$var$VALIDITY_STATE_NAME","$d94698215c4408a7$export$7a93102810e06862","$RRrwT$Fragment","$d94698215c4408a7$var$SUBMIT_NAME","$d94698215c4408a7$export$d0861e5bd09bd9e4","submitProps","button","type","validityStateToObject","object","key","$d94698215c4408a7$var$isHTMLElement","isHTMLElement","element","HTMLElement","$d94698215c4408a7$var$isFormControl","isFormControl","$d94698215c4408a7$var$isInvalid","isInvalid","getAttribute","getFirstInvalidControl","elements","isAsyncCustomMatcherEntry","entry","args","constructor","$d94698215c4408a7$var$returnsPromise","isSyncCustomMatcherEntry","returnsPromise","func","hasBuiltInError","error","validityKey","getValidAttribute","getInvalidAttribute","$d94698215c4408a7$export$be92b6f5f03c0fe9","$d94698215c4408a7$export$a455218a85c89869","$d94698215c4408a7$export$b04be29aa201d4f5","$d94698215c4408a7$export$7a7fa4424cb20976","$d94698215c4408a7$export$f69c19e57285b83a","$d94698215c4408a7$export$5efdf844224572d9","$d94698215c4408a7$export$2c4cf1f7b42ef78c"],"sources":["/Users/jovannyrebollar/Documents/GitHub/cop4331-G6-LP/frontend/node_modules/@radix-ui/react-form/dist/packages/react/form/src/index.ts","/Users/jovannyrebollar/Documents/GitHub/cop4331-G6-LP/frontend/node_modules/@radix-ui/react-form/dist/packages/react/form/src/Form.tsx"],"sourcesContent":["export {\n  createFormScope,\n  //\n  Form,\n  FormField,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  FormValidityState,\n  FormSubmit,\n  //\n  Root,\n  Field,\n  Label,\n  Control,\n  Message,\n  ValidityState,\n  Submit,\n} from './Form';\n\nexport type {\n  FormProps,\n  FormFieldProps,\n  FormLabelProps,\n  FormControlProps,\n  FormMessageProps,\n  FormValidityStateProps,\n  FormSubmitProps,\n} from './Form';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Label as LabelPrimitive } from '@radix-ui/react-label';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype ScopedProps<P> = P & { __scopeForm?: Scope };\nconst [createFormContext, createFormScope] = createContextScope('Form');\n\n/* -------------------------------------------------------------------------------------------------\n * Form\n * -----------------------------------------------------------------------------------------------*/\n\nconst FORM_NAME = 'Form';\n\ntype ValidityMap = { [fieldName: string]: ValidityState | undefined };\ntype CustomMatcherEntriesMap = { [fieldName: string]: CustomMatcherEntry[] };\ntype CustomErrorsMap = { [fieldName: string]: Record<string, boolean> };\n\ntype ValidationContextValue = {\n  getFieldValidity(fieldName: string): ValidityState | undefined;\n  onFieldValidityChange(fieldName: string, validity: ValidityState): void;\n\n  getFieldCustomMatcherEntries(fieldName: string): CustomMatcherEntry[];\n  onFieldCustomMatcherEntryAdd(fieldName: string, matcherEntry: CustomMatcherEntry): void;\n  onFieldCustomMatcherEntryRemove(fieldName: string, matcherEntryId: string): void;\n\n  getFieldCustomErrors(fieldName: string): Record<string, boolean>;\n  onFieldCustomErrorsChange(fieldName: string, errors: Record<string, boolean>): void;\n\n  onFieldValiditionClear(fieldName: string): void;\n};\nconst [ValidationProvider, useValidationContext] =\n  createFormContext<ValidationContextValue>(FORM_NAME);\n\ntype MessageIdsMap = { [fieldName: string]: Set<string> };\n\ntype AriaDescriptionContextValue = {\n  onFieldMessageIdAdd(fieldName: string, id: string): void;\n  onFieldMessageIdRemove(fieldName: string, id: string): void;\n  getFieldDescription(fieldName: string): string | undefined;\n};\nconst [AriaDescriptionProvider, useAriaDescriptionContext] =\n  createFormContext<AriaDescriptionContextValue>(FORM_NAME);\n\ntype FormElement = React.ElementRef<typeof Primitive.form>;\ntype PrimitiveFormProps = Radix.ComponentPropsWithoutRef<typeof Primitive.form>;\ninterface FormProps extends PrimitiveFormProps {\n  onClearServerErrors?(): void;\n}\n\nconst Form = React.forwardRef<FormElement, FormProps>(\n  (props: ScopedProps<FormProps>, forwardedRef) => {\n    const { __scopeForm, onClearServerErrors = () => {}, ...rootProps } = props;\n    const formRef = React.useRef<HTMLFormElement>(null);\n    const composedFormRef = useComposedRefs(forwardedRef, formRef);\n\n    // native validity per field\n    const [validityMap, setValidityMap] = React.useState<ValidityMap>({});\n    const getFieldValidity: ValidationContextValue['getFieldValidity'] = React.useCallback(\n      (fieldName) => validityMap[fieldName],\n      [validityMap]\n    );\n    const handleFieldValidityChange: ValidationContextValue['onFieldValidityChange'] =\n      React.useCallback(\n        (fieldName, validity) =>\n          setValidityMap((prevValidityMap) => ({\n            ...prevValidityMap,\n            [fieldName]: { ...(prevValidityMap[fieldName] ?? {}), ...validity },\n          })),\n        []\n      );\n    const handleFieldValiditionClear: ValidationContextValue['onFieldValiditionClear'] =\n      React.useCallback((fieldName) => {\n        setValidityMap((prevValidityMap) => ({ ...prevValidityMap, [fieldName]: undefined }));\n        setCustomErrorsMap((prevCustomErrorsMap) => ({ ...prevCustomErrorsMap, [fieldName]: {} }));\n      }, []);\n\n    // custom matcher entries per field\n    const [customMatcherEntriesMap, setCustomMatcherEntriesMap] =\n      React.useState<CustomMatcherEntriesMap>({});\n    const getFieldCustomMatcherEntries: ValidationContextValue['getFieldCustomMatcherEntries'] =\n      React.useCallback(\n        (fieldName) => customMatcherEntriesMap[fieldName] ?? [],\n        [customMatcherEntriesMap]\n      );\n    const handleFieldCustomMatcherAdd: ValidationContextValue['onFieldCustomMatcherEntryAdd'] =\n      React.useCallback((fieldName, matcherEntry) => {\n        setCustomMatcherEntriesMap((prevCustomMatcherEntriesMap) => ({\n          ...prevCustomMatcherEntriesMap,\n          [fieldName]: [...(prevCustomMatcherEntriesMap[fieldName] ?? []), matcherEntry],\n        }));\n      }, []);\n    const handleFieldCustomMatcherRemove: ValidationContextValue['onFieldCustomMatcherEntryRemove'] =\n      React.useCallback((fieldName, matcherEntryId) => {\n        setCustomMatcherEntriesMap((prevCustomMatcherEntriesMap) => ({\n          ...prevCustomMatcherEntriesMap,\n          [fieldName]: (prevCustomMatcherEntriesMap[fieldName] ?? []).filter(\n            (matcherEntry) => matcherEntry.id !== matcherEntryId\n          ),\n        }));\n      }, []);\n\n    // custom errors per field\n    const [customErrorsMap, setCustomErrorsMap] = React.useState<CustomErrorsMap>({});\n    const getFieldCustomErrors: ValidationContextValue['getFieldCustomErrors'] = React.useCallback(\n      (fieldName) => customErrorsMap[fieldName] ?? {},\n      [customErrorsMap]\n    );\n    const handleFieldCustomErrorsChange: ValidationContextValue['onFieldCustomErrorsChange'] =\n      React.useCallback((fieldName, customErrors) => {\n        setCustomErrorsMap((prevCustomErrorsMap) => ({\n          ...prevCustomErrorsMap,\n          [fieldName]: { ...(prevCustomErrorsMap[fieldName] ?? {}), ...customErrors },\n        }));\n      }, []);\n\n    // messageIds per field\n    const [messageIdsMap, setMessageIdsMap] = React.useState<MessageIdsMap>({});\n    const handleFieldMessageIdAdd: AriaDescriptionContextValue['onFieldMessageIdAdd'] =\n      React.useCallback((fieldName, id) => {\n        setMessageIdsMap((prevMessageIdsMap) => {\n          const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]).add(id);\n          return { ...prevMessageIdsMap, [fieldName]: fieldDescriptionIds };\n        });\n      }, []);\n    const handleFieldMessageIdRemove: AriaDescriptionContextValue['onFieldMessageIdRemove'] =\n      React.useCallback((fieldName, id) => {\n        setMessageIdsMap((prevMessageIdsMap) => {\n          const fieldDescriptionIds = new Set(prevMessageIdsMap[fieldName]);\n          fieldDescriptionIds.delete(id);\n          return { ...prevMessageIdsMap, [fieldName]: fieldDescriptionIds };\n        });\n      }, []);\n    const getFieldDescription: AriaDescriptionContextValue['getFieldDescription'] =\n      React.useCallback(\n        (fieldName) => Array.from(messageIdsMap[fieldName] ?? []).join(' ') || undefined,\n        [messageIdsMap]\n      );\n\n    return (\n      <ValidationProvider\n        scope={__scopeForm}\n        getFieldValidity={getFieldValidity}\n        onFieldValidityChange={handleFieldValidityChange}\n        getFieldCustomMatcherEntries={getFieldCustomMatcherEntries}\n        onFieldCustomMatcherEntryAdd={handleFieldCustomMatcherAdd}\n        onFieldCustomMatcherEntryRemove={handleFieldCustomMatcherRemove}\n        getFieldCustomErrors={getFieldCustomErrors}\n        onFieldCustomErrorsChange={handleFieldCustomErrorsChange}\n        onFieldValiditionClear={handleFieldValiditionClear}\n      >\n        <AriaDescriptionProvider\n          scope={__scopeForm}\n          onFieldMessageIdAdd={handleFieldMessageIdAdd}\n          onFieldMessageIdRemove={handleFieldMessageIdRemove}\n          getFieldDescription={getFieldDescription}\n        >\n          <Primitive.form\n            {...rootProps}\n            ref={composedFormRef}\n            // focus first invalid control when the form is submitted\n            onInvalid={composeEventHandlers(props.onInvalid, (event) => {\n              const firstInvalidControl = getFirstInvalidControl(event.currentTarget);\n              if (firstInvalidControl === event.target) firstInvalidControl.focus();\n\n              // prevent default browser UI for form validation\n              event.preventDefault();\n            })}\n            // clear server errors when the form is re-submitted\n            onSubmit={composeEventHandlers(props.onSubmit, onClearServerErrors, {\n              checkForDefaultPrevented: false,\n            })}\n            // clear server errors when the form is reset\n            onReset={composeEventHandlers(props.onReset, onClearServerErrors)}\n          />\n        </AriaDescriptionProvider>\n      </ValidationProvider>\n    );\n  }\n);\n\nForm.displayName = FORM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormField\n * -----------------------------------------------------------------------------------------------*/\n\nconst FIELD_NAME = 'FormField';\n\ntype FormFieldContextValue = {\n  id: string;\n  name: string;\n  serverInvalid: boolean;\n};\nconst [FormFieldProvider, useFormFieldContext] =\n  createFormContext<FormFieldContextValue>(FIELD_NAME);\n\ntype FormFieldElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FormFieldProps extends PrimitiveDivProps {\n  name: string;\n  serverInvalid?: boolean;\n}\n\nconst FormField = React.forwardRef<FormFieldElement, FormFieldProps>(\n  (props: ScopedProps<FormFieldProps>, forwardedRef) => {\n    const { __scopeForm, name, serverInvalid = false, ...fieldProps } = props;\n    const validationContext = useValidationContext(FIELD_NAME, __scopeForm);\n    const validity = validationContext.getFieldValidity(name);\n    const id = useId();\n\n    return (\n      <FormFieldProvider scope={__scopeForm} id={id} name={name} serverInvalid={serverInvalid}>\n        <Primitive.div\n          data-valid={getValidAttribute(validity, serverInvalid)}\n          data-invalid={getInvalidAttribute(validity, serverInvalid)}\n          {...fieldProps}\n          ref={forwardedRef}\n        />\n      </FormFieldProvider>\n    );\n  }\n);\n\nFormField.displayName = FIELD_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'FormLabel';\n\ntype FormLabelElement = React.ElementRef<typeof LabelPrimitive>;\ntype LabelProps = Radix.ComponentPropsWithoutRef<typeof LabelPrimitive>;\ninterface FormLabelProps extends LabelProps {}\n\nconst FormLabel = React.forwardRef<FormLabelElement, FormLabelProps>(\n  (props: ScopedProps<FormLabelProps>, forwardedRef) => {\n    const { __scopeForm, ...labelProps } = props;\n    const validationContext = useValidationContext(LABEL_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(LABEL_NAME, __scopeForm);\n    const htmlFor = labelProps.htmlFor || fieldContext.id;\n    const validity = validationContext.getFieldValidity(fieldContext.name);\n\n    return (\n      <LabelPrimitive\n        data-valid={getValidAttribute(validity, fieldContext.serverInvalid)}\n        data-invalid={getInvalidAttribute(validity, fieldContext.serverInvalid)}\n        {...labelProps}\n        ref={forwardedRef}\n        htmlFor={htmlFor}\n      />\n    );\n  }\n);\n\nFormLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormControl\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTROL_NAME = 'FormControl';\n\ntype FormControlElement = React.ElementRef<typeof Primitive.input>;\ntype PrimitiveInputProps = Radix.ComponentPropsWithoutRef<typeof Primitive.input>;\ninterface FormControlProps extends PrimitiveInputProps {}\n\nconst FormControl = React.forwardRef<FormControlElement, FormControlProps>(\n  (props: ScopedProps<FormControlProps>, forwardedRef) => {\n    const { __scopeForm, ...controlProps } = props;\n\n    const validationContext = useValidationContext(CONTROL_NAME, __scopeForm);\n    const fieldContext = useFormFieldContext(CONTROL_NAME, __scopeForm);\n    const ariaDescriptionContext = useAriaDescriptionContext(CONTROL_NAME, __scopeForm);\n\n    const ref = React.useRef<FormControlElement>(null);\n    const composedRef = useComposedRefs(forwardedRef, ref);\n    const name = controlProps.name || fieldContext.name;\n    const id = controlProps.id || fieldContext.id;\n    const customMatcherEntries = validationContext.getFieldCustomMatcherEntries(name);\n\n    const { onFieldValidityChange, onFieldCustomErrorsChange, onFieldValiditionClear } =\n      validationContext;\n    const updateControlValidity = React.useCallback(\n      async (control: FormControlElement) => {\n        //------------------------------------------------------------------------------------------\n        // 1. first, if we have built-in errors we stop here\n\n        if (hasBuiltInError(control.validity)) {\n          const controlValidity = validityStateToObject(control.validity);\n          onFieldValidityChange(name, controlValidity);\n          return;\n        }\n\n        //------------------------------------------------------------------------------------------\n        // 2. then gather the form data to give to custom matchers for cross-comparisons\n\n        const formData = control.form ? new FormData(control.form) : new FormData();\n        const matcherArgs: CustomMatcherArgs = [control.value, formData];\n\n        //------------------------------------------------------------------------------------------\n        // 3. split sync and async custom matcher entries\n\n        const syncCustomMatcherEntries: Array<SyncCustomMatcherEntry> = [];\n        const ayncCustomMatcherEntries: Array<AsyncCustomMatcherEntry> = [];\n        customMatcherEntries.forEach((customMatcherEntry) => {\n          if (isAsyncCustomMatcherEntry(customMatcherEntry, matcherArgs)) {\n            ayncCustomMatcherEntries.push(customMatcherEntry);\n          } else if (isSyncCustomMatcherEntry(customMatcherEntry)) {\n            syncCustomMatcherEntries.push(customMatcherEntry);\n          }\n        });\n\n        //------------------------------------------------------------------------------------------\n        // 4. run sync custom matchers and update control validity / internal validity + errors\n\n        const syncCustomErrors = syncCustomMatcherEntries.map(({ id, match }) => {\n          return [id, match(...matcherArgs)] as const;\n        });\n        const syncCustomErrorsById = Object.fromEntries(syncCustomErrors);\n        const hasSyncCustomErrors = Object.values(syncCustomErrorsById).some(Boolean);\n        const hasCustomError = hasSyncCustomErrors;\n        control.setCustomValidity(hasCustomError ? DEFAULT_INVALID_MESSAGE : '');\n        const controlValidity = validityStateToObject(control.validity);\n        onFieldValidityChange(name, controlValidity);\n        onFieldCustomErrorsChange(name, syncCustomErrorsById);\n\n        //------------------------------------------------------------------------------------------\n        // 5. run async custom matchers and update control validity / internal validity + errors\n\n        if (!hasSyncCustomErrors && ayncCustomMatcherEntries.length > 0) {\n          const promisedCustomErrors = ayncCustomMatcherEntries.map(({ id, match }) =>\n            match(...matcherArgs).then((matches) => [id, matches] as const)\n          );\n          const asyncCustomErrors = await Promise.all(promisedCustomErrors);\n          const asyncCustomErrorsById = Object.fromEntries(asyncCustomErrors);\n          const hasAsyncCustomErrors = Object.values(asyncCustomErrorsById).some(Boolean);\n          const hasCustomError = hasAsyncCustomErrors;\n          control.setCustomValidity(hasCustomError ? DEFAULT_INVALID_MESSAGE : '');\n          const controlValidity = validityStateToObject(control.validity);\n          onFieldValidityChange(name, controlValidity);\n          onFieldCustomErrorsChange(name, asyncCustomErrorsById);\n        }\n      },\n      [customMatcherEntries, name, onFieldCustomErrorsChange, onFieldValidityChange]\n    );\n\n    React.useEffect(() => {\n      const control = ref.current;\n      if (control) {\n        // We only want validate on change (native `change` event, not React's `onChange`). This is primarily\n        // a UX decision, we don't want to validate on every keystroke and React's `onChange` is the `input` event.\n        const handleChange = () => updateControlValidity(control);\n        control.addEventListener('change', handleChange);\n        return () => control.removeEventListener('change', handleChange);\n      }\n    }, [updateControlValidity]);\n\n    const resetControlValidity = React.useCallback(() => {\n      const control = ref.current;\n      if (control) {\n        control.setCustomValidity('');\n        onFieldValiditionClear(name);\n      }\n    }, [name, onFieldValiditionClear]);\n\n    // reset validity and errors when the form is reset\n    React.useEffect(() => {\n      const form = ref.current?.form;\n      if (form) {\n        form.addEventListener('reset', resetControlValidity);\n        return () => form.removeEventListener('reset', resetControlValidity);\n      }\n    }, [resetControlValidity]);\n\n    // focus first invalid control when fields are set as invalid by server\n    React.useEffect(() => {\n      const control = ref.current;\n      const form = control?.closest('form');\n      if (form && fieldContext.serverInvalid) {\n        const firstInvalidControl = getFirstInvalidControl(form);\n        if (firstInvalidControl === control) firstInvalidControl.focus();\n      }\n    }, [fieldContext.serverInvalid]);\n\n    const validity = validationContext.getFieldValidity(name);\n\n    return (\n      <Primitive.input\n        data-valid={getValidAttribute(validity, fieldContext.serverInvalid)}\n        data-invalid={getInvalidAttribute(validity, fieldContext.serverInvalid)}\n        aria-invalid={fieldContext.serverInvalid ? true : undefined}\n        aria-describedby={ariaDescriptionContext.getFieldDescription(name)}\n        // disable default browser behaviour of showing built-in error message on hover\n        title=\"\"\n        {...controlProps}\n        ref={composedRef}\n        id={id}\n        name={name}\n        onInvalid={composeEventHandlers(props.onInvalid, (event) => {\n          const control = event.currentTarget;\n          updateControlValidity(control);\n        })}\n        onChange={composeEventHandlers(props.onChange, (event) => {\n          // reset validity when user changes value\n          resetControlValidity();\n        })}\n      />\n    );\n  }\n);\n\nFormControl.displayName = CONTROL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormMessage\n * -----------------------------------------------------------------------------------------------*/\n\nconst validityMatchers = [\n  'badInput',\n  'patternMismatch',\n  'rangeOverflow',\n  'rangeUnderflow',\n  'stepMismatch',\n  'tooLong',\n  'tooShort',\n  'typeMismatch',\n  'valid',\n  'valueMissing',\n] as const;\ntype ValidityMatcher = typeof validityMatchers[number];\n\nconst DEFAULT_INVALID_MESSAGE = 'This value is not valid';\nconst DEFAULT_BUILT_IN_MESSAGES: Record<ValidityMatcher, string | undefined> = {\n  badInput: DEFAULT_INVALID_MESSAGE,\n  patternMismatch: 'This value does not match the required pattern',\n  rangeOverflow: 'This value is too large',\n  rangeUnderflow: 'This value is too small',\n  stepMismatch: 'This value does not match the required step',\n  tooLong: 'This value is too long',\n  tooShort: 'This value is too short',\n  typeMismatch: 'This value does not match the required type',\n  valid: undefined,\n  valueMissing: 'This value is missing',\n};\n\nconst MESSAGE_NAME = 'FormMessage';\n\ntype FormMessageElement = FormMessageImplElement;\ninterface FormMessageProps extends Omit<FormMessageImplProps, 'name'> {\n  match?: ValidityMatcher | CustomMatcher;\n  forceMatch?: boolean;\n  name?: string;\n}\n\nconst FormMessage = React.forwardRef<FormMessageElement, FormMessageProps>(\n  (props: ScopedProps<FormMessageProps>, forwardedRef) => {\n    const { match, name: nameProp, ...messageProps } = props;\n    const fieldContext = useFormFieldContext(MESSAGE_NAME, props.__scopeForm);\n    const name = nameProp ?? fieldContext.name;\n\n    if (match === undefined) {\n      return (\n        <FormMessageImpl {...messageProps} ref={forwardedRef} name={name}>\n          {props.children || DEFAULT_INVALID_MESSAGE}\n        </FormMessageImpl>\n      );\n    } else if (typeof match === 'function') {\n      return <FormCustomMessage match={match} {...messageProps} ref={forwardedRef} name={name} />;\n    } else {\n      return <FormBuiltInMessage match={match} {...messageProps} ref={forwardedRef} name={name} />;\n    }\n  }\n);\n\nFormMessage.displayName = MESSAGE_NAME;\n\ntype FormBuiltInMessageElement = FormMessageImplElement;\ninterface FormBuiltInMessageProps extends FormMessageImplProps {\n  match: ValidityMatcher;\n  forceMatch?: boolean;\n  name: string;\n}\n\nconst FormBuiltInMessage = React.forwardRef<FormBuiltInMessageElement, FormBuiltInMessageProps>(\n  (props: ScopedProps<FormBuiltInMessageProps>, forwardedRef) => {\n    const { match, forceMatch = false, name, children, ...messageProps } = props;\n    const validationContext = useValidationContext(MESSAGE_NAME, messageProps.__scopeForm);\n    const validity = validationContext.getFieldValidity(name);\n    const matches = forceMatch || validity?.[match];\n\n    if (matches) {\n      return (\n        <FormMessageImpl ref={forwardedRef} {...messageProps} name={name}>\n          {children ?? DEFAULT_BUILT_IN_MESSAGES[match]}\n        </FormMessageImpl>\n      );\n    }\n\n    return null;\n  }\n);\n\ntype FormCustomMessageElement = React.ElementRef<typeof FormMessageImpl>;\ninterface FormCustomMessageProps extends Radix.ComponentPropsWithoutRef<typeof FormMessageImpl> {\n  match: CustomMatcher;\n  forceMatch?: boolean;\n  name: string;\n}\n\nconst FormCustomMessage = React.forwardRef<FormCustomMessageElement, FormCustomMessageProps>(\n  (props: ScopedProps<FormCustomMessageProps>, forwardedRef) => {\n    const { match, forceMatch = false, name, id: idProp, children, ...messageProps } = props;\n    const validationContext = useValidationContext(MESSAGE_NAME, messageProps.__scopeForm);\n    const ref = React.useRef<FormCustomMessageElement>(null);\n    const composedRef = useComposedRefs(forwardedRef, ref);\n    const _id = useId();\n    const id = idProp ?? _id;\n\n    const customMatcherEntry = React.useMemo(() => ({ id, match }), [id, match]);\n    const { onFieldCustomMatcherEntryAdd, onFieldCustomMatcherEntryRemove } = validationContext;\n    React.useEffect(() => {\n      onFieldCustomMatcherEntryAdd(name, customMatcherEntry);\n      return () => onFieldCustomMatcherEntryRemove(name, customMatcherEntry.id);\n    }, [customMatcherEntry, name, onFieldCustomMatcherEntryAdd, onFieldCustomMatcherEntryRemove]);\n\n    const validity = validationContext.getFieldValidity(name);\n    const customErrors = validationContext.getFieldCustomErrors(name);\n    const hasMatchingCustomError = customErrors[id];\n    const matches =\n      forceMatch || (validity && !hasBuiltInError(validity) && hasMatchingCustomError);\n\n    if (matches) {\n      return (\n        <FormMessageImpl id={id} ref={composedRef} {...messageProps} name={name}>\n          {children ?? DEFAULT_INVALID_MESSAGE}\n        </FormMessageImpl>\n      );\n    }\n\n    return null;\n  }\n);\n\ntype FormMessageImplElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface FormMessageImplProps extends PrimitiveSpanProps {\n  name: string;\n}\n\nconst FormMessageImpl = React.forwardRef<FormMessageImplElement, FormMessageImplProps>(\n  (props: ScopedProps<FormMessageImplProps>, forwardedRef) => {\n    const { __scopeForm, id: idProp, name, ...messageProps } = props;\n    const ariaDescriptionContext = useAriaDescriptionContext(MESSAGE_NAME, __scopeForm);\n    const _id = useId();\n    const id = idProp ?? _id;\n\n    const { onFieldMessageIdAdd, onFieldMessageIdRemove } = ariaDescriptionContext;\n    React.useEffect(() => {\n      onFieldMessageIdAdd(name, id);\n      return () => onFieldMessageIdRemove(name, id);\n    }, [name, id, onFieldMessageIdAdd, onFieldMessageIdRemove]);\n\n    return <Primitive.span id={id} {...messageProps} ref={forwardedRef} />;\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * FormValidityState\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALIDITY_STATE_NAME = 'FormValidityState';\n\ninterface FormValidityStateProps {\n  children(validity: ValidityState | undefined): React.ReactNode;\n  name?: string;\n}\n\nconst FormValidityState = (props: ScopedProps<FormValidityStateProps>) => {\n  const { __scopeForm, name: nameProp, children } = props;\n  const validationContext = useValidationContext(VALIDITY_STATE_NAME, __scopeForm);\n  const fieldContext = useFormFieldContext(VALIDITY_STATE_NAME, __scopeForm);\n  const name = nameProp ?? fieldContext.name;\n  const validity = validationContext.getFieldValidity(name);\n  return <>{children(validity)}</>;\n};\n\nFormValidityState.displayName = VALIDITY_STATE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * FormSubmit\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUBMIT_NAME = 'FormSubmit';\n\ntype FormSubmitElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface FormSubmitProps extends PrimitiveButtonProps {}\n\nconst FormSubmit = React.forwardRef<FormSubmitElement, FormSubmitProps>(\n  (props: ScopedProps<FormSubmitProps>, forwardedRef) => {\n    const { __scopeForm, ...submitProps } = props;\n    return <Primitive.button type=\"submit\" {...submitProps} ref={forwardedRef} />;\n  }\n);\n\nFormSubmit.displayName = SUBMIT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ValidityStateKey = keyof ValidityState;\ntype SyncCustomMatcher = (value: string, formData: FormData) => boolean;\ntype AsyncCustomMatcher = (value: string, formData: FormData) => Promise<boolean>;\ntype CustomMatcher = SyncCustomMatcher | AsyncCustomMatcher;\ntype CustomMatcherEntry = { id: string; match: CustomMatcher };\ntype SyncCustomMatcherEntry = { id: string; match: SyncCustomMatcher };\ntype AsyncCustomMatcherEntry = { id: string; match: AsyncCustomMatcher };\ntype CustomMatcherArgs = [string, FormData];\n\nfunction validityStateToObject(validity: ValidityState) {\n  const object: any = {};\n  for (const key in validity) {\n    object[key] = validity[key as ValidityStateKey];\n  }\n  return object as Record<ValidityStateKey, boolean>;\n}\n\nfunction isHTMLElement(element: any): element is HTMLElement {\n  return element instanceof HTMLElement;\n}\n\nfunction isFormControl(element: any): element is { validity: ValidityState } {\n  return 'validity' in element;\n}\n\nfunction isInvalid(control: HTMLElement) {\n  return (\n    isFormControl(control) &&\n    (control.validity.valid === false || control.getAttribute('aria-invalid') === 'true')\n  );\n}\n\nfunction getFirstInvalidControl(form: HTMLFormElement): HTMLElement | undefined {\n  const elements = form.elements;\n  const [firstInvalidControl] = Array.from(elements).filter(isHTMLElement).filter(isInvalid);\n  return firstInvalidControl;\n}\n\nfunction isAsyncCustomMatcherEntry(\n  entry: CustomMatcherEntry,\n  args: CustomMatcherArgs\n): entry is AsyncCustomMatcherEntry {\n  return entry.match.constructor.name === 'AsyncFunction' || returnsPromise(entry.match, args);\n}\n\nfunction isSyncCustomMatcherEntry(entry: CustomMatcherEntry): entry is SyncCustomMatcherEntry {\n  return entry.match.constructor.name === 'Function';\n}\n\nfunction returnsPromise(func: Function, args: Array<unknown>) {\n  return func(...args) instanceof Promise;\n}\n\nfunction hasBuiltInError(validity: ValidityState) {\n  let error = false;\n  for (const validityKey in validity) {\n    const key = validityKey as ValidityStateKey;\n    if (key !== 'valid' && key !== 'customError' && validity[key]) {\n      error = true;\n      break;\n    }\n  }\n  return error;\n}\n\nfunction getValidAttribute(validity: ValidityState | undefined, serverInvalid: boolean) {\n  if (validity?.valid === true && !serverInvalid) return true;\n  return undefined;\n}\nfunction getInvalidAttribute(validity: ValidityState | undefined, serverInvalid: boolean) {\n  if (validity?.valid === false || serverInvalid) return true;\n  return undefined;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Form;\nconst Field = FormField;\nconst Label = FormLabel;\nconst Control = FormControl;\nconst Message = FormMessage;\nconst ValidityState = FormValidityState;\nconst Submit = FormSubmit;\n\nexport {\n  createFormScope,\n  //\n  Form,\n  FormField,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  FormValidityState,\n  FormSubmit,\n  //\n  Root,\n  Field,\n  Label,\n  Control,\n  Message,\n  ValidityState,\n  Submit,\n};\n\nexport type {\n  FormProps,\n  FormFieldProps,\n  FormLabelProps,\n  FormControlProps,\n  FormMessageProps,\n  FormValidityStateProps,\n  FormSubmitProps,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}